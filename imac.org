#+TITLE: Host Specific Settings

* Paths
** Path for executables
:PROPERTIES:
:ID: B3BF5558-DFCB-4E12-95D6-51199FD7045F
:END:
The default contains only followings.
#+begin_example
("/usr/bin" "/bin" "/usr/sbin" "/sbin"
 "/Applications/Emacs.app/Contents/MacOS/bin")
#+end_example

Ensure to include those like w3m, git, etc.
#+begin_src emacs-lisp
(setq exec-path (cons "/usr/local/bin" exec-path))
(setq exec-path (cons "/usr/local/git/bin" exec-path))
(setq exec-path (cons (expand-file-name "~/bin") exec-path))
#+end_src

#+begin_src sh
echo $PATH | tr ':' '\n'
#+end_src

#+results:
| /usr/local/bin     |
| /usr/bin           |
| /bin               |
| /usr/sbin          |
| /sbin              |
| /usr/local/git/bin |
| /usr/texbin        |
| /usr/X11/bin       |

#+begin_src emacs-lisp
  (setenv "PATH" (concat
                  (expand-file-name "~/bin:")
                  "/usr/local/git/bin:"
                  "/usr/local/bin:"
                  (getenv "PATH")))
#+end_src

** Path for elisp libraries
All external elisp files will be stored under .emacs.d.
I won't add anymore here, even =/usr/local/share/emacs=.

This is the list of where the load-path is set.
- [[file:init.el::(add-to-list%20'load-path%20(expand-file-name][init.el]] to load org-mode first
- [[file:starter-kit.org::*Load%20path%20etc.][Load path etc.]] (ELPA and more)
- [[file:starter-kit.org::*Auto-install.el][Auto-install.el]] (another auto-install package)
- [[file:starter-kit.org::*System/User%20specific%20customizations][System/User specific customizations]]
  - [[file:starter-kit.org::*E-lisp%20customization][E-lisp customization]]
- [[file:starter-kit-misc.org::*Color%20Themes][Color Themes]]

** Path for info document
Org-mode is directly loaded from =src= directory, not installed
hardly.
To read the latest info file, some code is added in [[file:starter-kit-org.org::*Ensure%20the%20Latest%20Org-mode%20manual%20is%20in%20the%20info%20directory][Ensure the Latest
Org-mode manual is in the info directory]] and =Info-directory-list= is
modified there.

* Font
:PROPERTIES:
:ID: EC969900-0032-4BE4-86A1-72D02B8D8176
:END:
#+begin_src emacs-lisp
  (set-face-attribute 'default nil
                      :family "Menlo"
                      :height 130)
  (set-fontset-font nil 'japanese-jisx0208
                    (font-spec :family "Hiragino_Kaku_Gothic_ProN"))
  (setq face-font-rescale-alist
        '((".*Menlo.*" . 1.0)
          (".*Hiragino_Kaku_Gothic_ProN.*" . 1.2)
          ("-cdac$" . 1.3)))
#+end_src

* Tools
Elisp files under =~/.emacs.d/src= and its all sub-directories are
automatically added to the load-path by =normal-top-level-add-subdirs-to-load-path=.
See [[file:starter-kit.org::*E-lisp%20customization][E-lisp customization]] for detail.

** Migemo
:PROPERTIES:
:ID: 5C73B142-C710-4D04-BFBD-71FA3F559FD2
:END:
http://0xcc.net/migemo/
http://plus-alpha-space.cocolog-nifty.com/blog/2009/12/carbon-emacsmig.html
http://www.kaoriya.net/#CMIGEMO
http://d.hatena.ne.jp/samurai20000/20100907/1283791433

#+begin_src emacs-lisp
(require 'migemo)
(setq migemo-command "/usr/local/bin/cmigemo")
(setq migemo-options '("-q" "--emacs"))
(setq migemo-dictionary "/usr/local/share/migemo/utf-8/migemo-dict")
(setq migemo-user-dictionary nil)
(setq migemo-regex-dictionary nil)
(setq migemo-coding-system 'utf-8-unix)
#+end_src

** W3M
:PROPERTIES:
:ID: E7E9085C-4307-463E-86C3-2F5DF44B58BA
:END:
http://w3m.sourceforge.net/index.ja.html

#+begin_src emacs-lisp
(require 'w3m-load)
;(setq browse-url-browser-function 'browse-url-default-macosx-browser)
(setq browse-url-browser-function 'w3m-browse-url)
#+end_src
** Rcodetools
:PROPERTIES:
:ID: 31BDD86D-8179-4C42-B7BB-F128BAA79AE3
:END:
Install rcodetools and fastri by gem first.
And make sure to include them into the path.

#+begin_example
gem install rcodetools
gem install fastri
#+end_example

#+begin_src emacs-lisp
  (require 'rcodetools)
  (require 'anything-rcodetools)
  
  (setq ri-ruby-script "/Library/Ruby/Site/ri-emacs.rb")
  (autoload 'ri "ri-ruby.el" nil t)
  (add-hook 'ruby-mode-hook (lambda ()
                              (local-set-key 'f1 'ri)
                              (local-set-key "\M-\C-i" 'ri-ruby-complete-symbol)
                              (local-set-key 'f4 'ri-ruby-show-args)
                              ))
#+end_src

** Clojure
:PROPERTIES:
:ID: CD395968-E6D7-4448-AA45-21CB1DC81CC6
:END:

Necessary jar files are located in [[~/Library/Java/Extensions][Extension]] directory.

#+begin_src emacs-lisp
(setq inferior-lisp-program "java clojure.main")
#+end_src

** Haskell
:PROPERTIES:
:ID: 362DF3D6-D5F9-4229-B325-57D6718FE005
:END:

#+begin_src emacs-lisp
;;(require 'haskell-site-file)
(load "haskell-site-file")
(add-hook 'haskell-mode-hook 'turn-on-haskell-doc-mode)
(add-hook 'haskell-mode-hook 'turn-on-haskell-indentation)
;;(add-hook 'haskell-mode-hook 'turn-on-haskell-indent)
;;(add-hook 'haskell-mode-hook 'turn-on-haskell-simple-indent)
#+end_src

[[id:54CA8ABF-0A91-465A-A1BE-D802B5860E92][ghc-mod by Kazu Yamamoto]]
#+begin_src emacs-lisp
(autoload 'ghc-init "ghc" nil t)
(add-hook 'haskell-mode-hook (lambda () (ghc-init)))
#+end_src
